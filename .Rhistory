,
5
))
x <- list(a=1:4, b=rnorm(10),c=rnorm(20, 1), d = rnorm(100,5))
x
lapply(x, mean)
x <- list(a = matrix(1:4, 2,2), b= matrix(1:6,3,2))
x
lapply(x, function(elt), elt[,1])
lapply(x, function(elt) elt[,1])
lapply(x, function(elt) elt[1,])
lapply(x, function(elt) elt[2,])
lapply(x, function(elt) elt[3,])
lapply(x, function(tle) tle[2,])
x <- list(a=1:4, b=rnorm(10), c=rnorm(20,1),d=rnorm(100,5))
x
lapply(x,mean)
sapply(x,mean)
mean(x)
str(lapply)
str(sapply)
str(tapply)
x <- c(nrom(10), runif(10), rnorm(10,1))
x <- c(rnorm(10), runif(10), rnorm(10,1))
x
f < gl(3,10)
f
f <- gl(3,10)
f
tapply(x,f,mean)
tapply(x,f,mean, simplify=FALSE)
tapply(x,f,range)
str(split)
split(x,f)
lapply(split(x,f,mean)
lapply(split(x,f),mean)
lapply(split(x,f), mean)
library(datasets)
available.functions()
available.packagess()
available.packages()
head(rownames(a),3)
available.packages(head(rownames(a),3))
a <- available.packages()
head(rownames(a), 3)
install.packages("slidify")
install.packages(c("ggplot2","devtools"))
install.packages("slidify")
library()
library(ggplot2)
search()
find.packages("devtools")
find.package("devtools")
library(devtools)
find_rtools()
find.package("devtools")
library(devtools)
find_rtools()
a <- read.table("001.csv")
a
a <- read.table("002.csv")
a
sum <- 0  ## sum of all the non-null pollutant
ct  <- 0  ## count of the non-null value
directory <- "C:/RworkingDirectory/"
for (i in 1:332) {
if (i < 10)  suf <- "00"
else if   (i < 100) suf <- "0"
else
suf <- ""
suf <- paste(suf, as.character(i), sep="")
print (suf)
## File name with the directory path
FNM <- paste(suf, ".csv",sep="")
FNM <- paste(directory, FNM ,sep="")
poldt <- read.csv (FNM, header=TRUE)
sf <- poldt[, "sulfate"]
sf <-sf[!is.na(sf)]        ## Picking all the non NA values of the pollutant
ct <- ct + length(sf)      ## cumulative count of all the non NA values of the pollutant
sm <- sm + sum(sf)        ## cumulative sum
}
pollutantmean <- sm /ct
sm <- 0  ## sum of all the non-null pollutant
ct  <- 0  ## count of the non-null value
directory <- "C:/RworkingDirectory/"
for (i in 1:332) {
if (i < 10)  suf <- "00"
else if   (i < 100) suf <- "0"
else
suf <- ""
suf <- paste(suf, as.character(i), sep="")
print (suf)
## File name with the directory path
FNM <- paste(suf, ".csv",sep="")
FNM <- paste(directory, FNM ,sep="")
poldt <- read.csv (FNM, header=TRUE)
sf <- poldt[, "sulfate"]
sf <-sf[!is.na(sf)]        ## Picking all the non NA values of the pollutant
ct <- ct + length(sf)      ## cumulative count of all the non NA values of the pollutant
sm <- sm + sum(sf)        ## cumulative sum
}
pollutantmean <- sm /ct
pollutantmean
pollutantmean <function(directory, pollutant,id = 1:332) {
sm <- 0  ## sum of all the non-null pollutant
ct  <- 0  ## count of the non-null value
## directory <- "C:/RworkingDirectory/"
for (i in 1:332) {
if (i < 10)  suf <- "00"
else if   (i < 100) suf <- "0"
else
suf <- ""
suf <- paste(suf, as.character(i), sep="")
print (suf)
## File name with the directory path
FNM <- paste(suf, ".csv",sep="")
FNM <- paste(directory, FNM ,sep="")
poldt <- read.csv (FNM, header=TRUE)
sf <- poldt[, "sulfate"]
sf <-sf[!is.na(sf)]        ## Picking all the non NA values of the pollutant
ct <- ct + length(sf)      ## cumulative count of all the non NA values of the pollutant
sm <- sm + sum(sf)        ## cumulative sum
}
pollutantmean <- sm /ct
}
pollutantmean <- function(directory, pollutant,id = 1:332) {
sm <- 0  ## sum of all the non-null pollutant
ct  <- 0  ## count of the non-null value
## directory <- "C:/RworkingDirectory/"
for (i in 1:332) {
if (i < 10)  suf <- "00"
else if   (i < 100) suf <- "0"
else
suf <- ""
suf <- paste(suf, as.character(i), sep="")
print (suf)
## File name with the directory path
FNM <- paste(suf, ".csv",sep="")
FNM <- paste(directory, FNM ,sep="")
poldt <- read.csv (FNM, header=TRUE)
sf <- poldt[, "sulfate"]
sf <-sf[!is.na(sf)]        ## Picking all the non NA values of the pollutant
ct <- ct + length(sf)      ## cumulative count of all the non NA values of the pollutant
sm <- sm + sum(sf)        ## cumulative sum
}
pollutantmean <- sm /ct
}
pollutanemean
pollutantmean <- function(directory, pollutant,id = 1:332) {
sm <- 0  ## sum of all the non-null pollutant
ct  <- 0  ## count of the non-null value
## directory <- "C:/RworkingDirectory/"
for (i in 1:332) {
if (i < 10)  suf <- "00"
else if   (i < 100) suf <- "0"
else
suf <- ""
suf <- paste(suf, as.character(i), sep="")
print (suf)
## File name with the directory path
FNM <- paste(suf, ".csv",sep="")
FNM <- paste(directory, FNM ,sep="")
poldt <- read.csv (FNM, header=TRUE)
sf <- poldt[, "sulfate"]
sf <-sf[!is.na(sf)]        ## Picking all the non NA values of the pollutant
ct <- ct + length(sf)      ## cumulative count of all the non NA values of the pollutant
sm <- sm + sum(sf)        ## cumulative sum
}
pmean <- sm /ct
return
}
pollutantmean("C:/RworkingDirectory/", "sulfate", id=1:332)
pollutantmean <- function(directory, pollutant,id = 1:332) {
sm <- 0  ## sum of all the non-null pollutant
ct  <- 0  ## count of the non-null value
## directory <- "C:/RworkingDirectory/"
for (i in 1:332) {
if (i < 10)  suf <- "00"
else if   (i < 100) suf <- "0"
else
suf <- ""
suf <- paste(suf, as.character(i), sep="")
## print (suf)
## File name with the directory path
FNM <- paste(suf, ".csv",sep="")
FNM <- paste(directory, FNM ,sep="")
poldt <- read.csv (FNM, header=TRUE)
sf <- poldt[, "sulfate"]
sf <-sf[!is.na(sf)]        ## Picking all the non NA values of the pollutant
ct <- ct + length(sf)      ## cumulative count of all the non NA values of the pollutant
sm <- sm + sum(sf)        ## cumulative sum
}
pollutantmean <- sm /ct
}
pollutantmean("C:/RworkingDirectory/", "sulfate", id=1:332)
pollutantmean <- function(directory, pollutant,id = 1:332) {
sm <- 0  ## sum of all the non-null pollutant
ct  <- 0  ## count of the non-null value
## directory <- "C:/RworkingDirectory/"
for (i in 1:332) {
if (i < 10)  suf <- "00"
else if   (i < 100) suf <- "0"
else
suf <- ""
suf <- paste(suf, as.character(i), sep="")
## print (suf)
## File name with the directory path
FNM <- paste(suf, ".csv",sep="")
FNM <- paste(directory, FNM ,sep="")
poldt <- read.csv (FNM, header=TRUE)
sf <- poldt[, "sulfate"]
sf <-sf[!is.na(sf)]        ## Picking all the non NA values of the pollutant
ct <- ct + length(sf)      ## cumulative count of all the non NA values of the pollutant
sm <- sm + sum(sf)        ## cumulative sum
}
pmean <- sm /ct
print (pmean)
}
pollutantmean("C:/RworkingDirectory/", "sulfate", id=1:332)
pollutantmean("C:/RworkingDirectory/", "sulfate", id=75:332)
pollutantmean("C:/RworkingDirectory/", "sulfate", id=1:3)
pollutantmean <- function(directory, pollutant,id = 1:332) {
sm <- 0  ## sum of all the non-null pollutant
ct  <- 0  ## count of the non-null value
## directory <- "C:/RworkingDirectory/"
for (i in 1:332) {
if (i < 10)  suf <- "00"
else if   (i < 100) suf <- "0"
else
suf <- ""
suf <- paste(suf, as.character(i), sep="")
## print (suf)
## File name with the directory path
FNM <- paste(suf, ".csv",sep="")
FNM <- paste(directory, FNM ,sep="")
print (FNM)
poldt <- read.csv (FNM, header=TRUE)
sf <- poldt[, "sulfate"]
sf <-sf[!is.na(sf)]        ## Picking all the non NA values of the pollutant
ct <- ct + length(sf)      ## cumulative count of all the non NA values of the pollutant
sm <- sm + sum(sf)        ## cumulative sum
}
pmean <- sm /ct
print (pmean)
}
pollutantmean("C:/RworkingDirectory/", "sulfate", id=1:3)
pollutantmean("C:/RworkingDirectory/", "sulfate", id=1:3)
pollutantmean("C:/RworkingDirectory/", "sulfate", id=1:7)
pollutantmean <- function(directory, pollutant,id = 1:332) {
sm <- 0  ## sum of all the non-null pollutant
ct  <- 0  ## count of the non-null value
## directory <- "C:/RworkingDirectory/"
for (i in id) {
if (i < 10)  suf <- "00"
else if   (i < 100) suf <- "0"
else
suf <- ""
suf <- paste(suf, as.character(i), sep="")
## print (suf)
## File name with the directory path
FNM <- paste(suf, ".csv",sep="")
FNM <- paste(directory, FNM ,sep="")
print (FNM)
poldt <- read.csv (FNM, header=TRUE)
sf <- poldt[, "sulfate"]
sf <-sf[!is.na(sf)]        ## Picking all the non NA values of the pollutant
ct <- ct + length(sf)      ## cumulative count of all the non NA values of the pollutant
sm <- sm + sum(sf)        ## cumulative sum
}
pmean <- sm /ct
print (pmean)
}
pollutantmean("C:/RworkingDirectory/", "sulfate", id=1:7)
pollutantmean("C:/RworkingDirectory/", "sulfate", id=1:35)
pollutantmean("C:/RworkingDirectory/", "sulfate", id=10:35)
df <- read.csv("001.csv", header=TRUE)
df
head(df)
df[,sulfate]
df[,"sulfate"]
p<-"sulfate"
df[,p]
df[,"sulfate"]
b < df[,p]
b <- df[,p]
b
df[,"Date"]
df[,"sulfate"]
p<-"sulfate"
b <- df[,"sulfate"]
mean(b,rm.na=TRUE)
mean(b,na.rm=TRUE)
p<-"sulfate"
b <- df[,p]
mean(b,na.rm=TRUE)
pollutantmean <- function(directory, pollutant,id = 1:332) {
sm <- 0  ## sum of all the non-null pollutant
ct  <- 0  ## count of the non-null value
## directory <- "C:/RworkingDirectory/"
for (i in id) {
if (i < 10)  suf <- "00"
else if   (i < 100) suf <- "0"
else
suf <- ""
suf <- paste(suf, as.character(i), sep="")
## print (suf)
## File name with the directory path
FNM <- paste(suf, ".csv",sep="")
FNM <- paste(directory, FNM ,sep="")
print (FNM)
poldt <- read.csv (FNM, header=TRUE)
sf <- poldt[, pollutant]
sf <-sf[!is.na(sf)]        ## Picking all the non NA values of the pollutant
ct <- ct + length(sf)      ## cumulative count of all the non NA values of the pollutant
sm <- sm + sum(sf)        ## cumulative sum
}
pmean <- sm /ct
print (pmean)
}
pollutantmean("C:/RworkingDirectory/", "sulfate", id=10:35)
pollutantmean <- function(directory, pollutant,id = 1:332) {
sm <- 0  ## sum of all the non-null pollutant
ct  <- 0  ## count of the non-null value
## directory <- "C:/RworkingDirectory/"
for (i in id) {
if (i < 10)  suf <- "00"
else if   (i < 100) suf <- "0"
else
suf <- ""
suf <- paste(suf, as.character(i), sep="")
## print (suf)
## File name with the directory path
FNM <- paste(suf, ".csv",sep="")
FNM <- paste(directory, FNM ,sep="")
## print (FNM)
poldt <- read.csv (FNM, header=TRUE)
sf <- poldt[, pollutant]
sf <-sf[!is.na(sf)]        ## Picking all the non NA values of the pollutant
ct <- ct + length(sf)      ## cumulative count of all the non NA values of the pollutant
sm <- sm + sum(sf)        ## cumulative sum
}
pmean <- sm /ct
print (pmean)
}
pollutantmean("C:/RworkingDirectory/", "sulfate", id=10:35)
pollutantmean("C:/RworkingDirectory/", "Date", id=10:35)
pollutantmean("C:/RworkingDirectory/", "nitrate", id=10:35)
pollutantmean("C:/RworkingDirectory/", "nitrate", id=1:35)
id <- c()
id
id <- character()
id
id <- c(id,"a")
id
id <-c(id,"b")
id
id <- numeric()
id
id <- (id,1)
id <- c(id,1)
id
complete <- function(directory, id = 1:332) {
nobs <- numeric()
## directory <- "C:/RworkingDirectory/"
for (i in id) {
if (i < 10)  suf <- "00"
else if   (i < 100) suf <- "0"
else
suf <- ""
suf <- paste(suf, as.character(i), sep="")
## print (suf)
## File name with the directory path
FNM <- paste(suf, ".csv",sep="")
FNM <- paste(directory, FNM ,sep="")
## print (FNM)
poldt <- read.csv (FNM, header=TRUE)
nb <- lengthpoldt[complete.cases(poldt),]
nobs <- c(nobs, nb)
}
compldf <- dataframe(id,nobs)
print(compldf)
}
complete("C:/RworkingDirectory/",  id=1:332)
complete <- function(directory, id = 1:332) {
nobs <- numeric()
## directory <- "C:/RworkingDirectory/"
for (i in id) {
if (i < 10)  suf <- "00"
else if   (i < 100) suf <- "0"
else
suf <- ""
suf <- paste(suf, as.character(i), sep="")
## print (suf)
## File name with the directory path
FNM <- paste(suf, ".csv",sep="")
FNM <- paste(directory, FNM ,sep="")
## print (FNM)
poldt <- read.csv (FNM, header=TRUE)
nb <- length(poldt[complete.cases(poldt),])
nobs <- c(nobs, nb)
}
compldf <- dataframe(id,nobs)
print(compldf)
}
complete("C:/RworkingDirectory/",  id=1:332)
complete <- function(directory, id = 1:332) {
nobs <- numeric()
## directory <- "C:/RworkingDirectory/"
for (i in id) {
if (i < 10)  suf <- "00"
else if   (i < 100) suf <- "0"
else
suf <- ""
suf <- paste(suf, as.character(i), sep="")
## print (suf)
## File name with the directory path
FNM <- paste(suf, ".csv",sep="")
FNM <- paste(directory, FNM ,sep="")
## print (FNM)
poldt <- read.csv (FNM, header=TRUE)
nb <- length(poldt[complete.cases(poldt),])
nobs <- c(nobs, nb)
}
compldf <- data.frame(id,nobs)
print(compldf)
}
complete("C:/RworkingDirectory/",  id=1:332)
cf <- read.csv("C:/RworkingDirectory/001.csv", header=TRUE)
nb <- length(cf[complete.cases(cf),])
print nb
cf <- read.csv("C:/RworkingDirectory/001.csv", header=TRUE)
nb <- length(cf[complete.cases(cf),])
nb
cf <- read.csv("C:/RworkingDirectory/001.csv", header=TRUE)
cf[complete.cases(cf),]
nb <- length(cf[complete.cases(cf),])
nb
cf <- read.csv("C:/RworkingDirectory/001.csv", header=TRUE)
cf[complete.cases(cf),]
nb <- nrow(cf[complete.cases(cf),])
nb
complete <- function(directory, id = 1:332) {
nobs <- numeric()
## directory <- "C:/RworkingDirectory/"
for (i in id) {
if (i < 10)  suf <- "00"
else if   (i < 100) suf <- "0"
else
suf <- ""
suf <- paste(suf, as.character(i), sep="")
## print (suf)
## File name with the directory path
FNM <- paste(suf, ".csv",sep="")
FNM <- paste(directory, FNM ,sep="")
## print (FNM)
poldt <- read.csv (FNM, header=TRUE)
nb <- nrow(poldt[complete.cases(poldt),])
nobs <- c(nobs, nb)
}
compldf <- data.frame(id,nobs)
print(compldf)
}
call complete("C:/RworkingDirectory/",  id=1:332)
complete("C:/RworkingDirectory/",  id=1:332)
complete("C:/RworkingDirectory/",  id=325:332)
?cor
cor(1:10, 2:11)
corr <- function(directory, threshold) {
## directory <- "C:/RworkingDirectory/"
for (i in id) {
if (i < 10)  suf <- "00"
else if   (i < 100) suf <- "0"
else
suf <- ""
suf <- paste(suf, as.character(i), sep="")
## print (suf)
## File name with the directory path
FNM <- paste(suf, ".csv",sep="")
FNM <- paste(directory, FNM ,sep="")
## print (FNM)
poldt <- read.csv (FNM, header=TRUE)
nbs <- nrow(poldt[complete.cases(poldt),])   ## complete cases
if nbs < threshold next
sf <- poldt[, sulfate]      # vector of sulfate values
nt <- poldt[, nitrate]      # vector of nitrate values
cr <- cor(1:10, 2:11)
print (cr)
}
}
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
1
submit()
submit()
submit()
2
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
library(datasets)
data(iris)
?iris
iris3
iris
iris
